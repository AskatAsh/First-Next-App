import localFont from "next/font/local";
import "./globals.css";
import Link from "next/link";
import {
  RegisterLink,
  LoginLink,
  LogoutLink,
} from "@kinde-oss/kinde-auth-nextjs/components";
import { getKindeServerSession } from "@kinde-oss/kinde-auth-nextjs/server";
import { AuthProvider } from "./AuthProvider";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


export default async function RootLayout({ children }) {
  const { isAuthenticated, getUser } = getKindeServerSession();
  const isUserAuthenticated = await isAuthenticated();
  const user = await getUser();

  return (
    <AuthProvider>
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased p-6`}
        >
          <nav className="flex items-center justify-between flex-wrap gap-6">
            <ul className="flex gap-6 pb-2">
              <li>
                <Link href="/">Home</Link>
              </li>
              <li>
                <Link prefetch={false} href="/about">
                  About
                </Link>
              </li>
              <li>
                <Link prefetch={false} href="/blogs">
                  Blogs
                </Link>
              </li>
              <li>
                <Link prefetch={false} href="/profile">
                  Profile
                </Link>
              </li>
            </ul>
            {isAuthenticated && user?.email ? (
              <LogoutLink>Log out</LogoutLink>
            ) : (
              <div className="flex gap-6">
                <LoginLink>Sign in</LoginLink>
                <RegisterLink>Sign up</RegisterLink>
              </div>
            )}
          </nav>
          <hr className="border-gray-800" />
          {children}
        </body>
      </html>
    </AuthProvider>
  );
}
